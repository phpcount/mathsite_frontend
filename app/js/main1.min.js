"use strict";

function _continueIgnored(value) {
  if (value && value.then) {
    return value.then(_empty);
  }
}

function _empty() {}

function _catch(body, recover) {
  try {
    var result = body();
  } catch (e) {
    return recover(e);
  }

  if (result && result.then) {
    return result.then(void 0, recover);
  }

  return result;
}

function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread(); }

function _nonIterableSpread() { throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _iterableToArray(iter) { if (typeof Symbol !== "undefined" && Symbol.iterator in Object(iter)) return Array.from(iter); }

function _arrayWithoutHoles(arr) { if (Array.isArray(arr)) return _arrayLikeToArray(arr); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

function _async(fn) {
  return function () {
    var args = Array.prototype.slice.call(arguments, 0);

    try {
      return Promise.resolve(fn.apply(this, args));
    } catch (e) {
      return Promise.reject(e);
    }
  };
}

function _await(input, then, direct) {
  if (direct) {
    return typeof then === 'function' ? then(input) : input;
  }

  if (typeof then === 'function') {
    return Promise.resolve(input).then(then);
  } else {
    return Promise.resolve(input);
  }
}

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

var SettingApp = /*#__PURE__*/function () {
  function SettingApp() {
    var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;

    _classCallCheck(this, SettingApp);

    this.sessionKey = params["session-key"];
    this.name = params.name;
    this.is_update = params["is-updated"];
    this.count_news = params["count-news"];
    this.clearInterval = params.clearInterval;
    this.allowBreadcrumb = params.allowBreadcrumb;
  }

  _createClass(SettingApp, [{
    key: "getCountNews",
    value: function getCountNews() {
      return this.count_news;
    }
  }, {
    key: "getBreadcrumb",
    value: function getBreadcrumb() {
      return this.allowBreadcrumb;
    }
  }, {
    key: "setTime",
    value: function setTime(time) {
      this.time = time;
    }
  }, {
    key: "getSessionKey",
    value: function getSessionKey() {
      return this.sessionKey;
    }
  }, {
    key: "getTime",
    value: function getTime() {
      return this.time;
    } // only dev //

  }, {
    key: "toString",
    value: function toString() {
      return "name: " + this.name + ", session: " + this.sessionKey;
    } // only dev //

  }], [{
    key: "getTime",
    value: function getTime() {
      return 7000;
    }
  }]);

  return SettingApp;
}();

$(function () {
  var setting = new SettingApp(defSetting);
  setting.setTime(3000); // Session Key for user

  $.cookie('session-key', setting.getSessionKey()); // Fixed:SL01 (view all slides)

  $("#sliders").css("visibility", "visible");
  $('#sliders').slick({
    arrows: false,
    infinite: true,
    fade: true,
    dots: true,
    swipeToSlide: true,
    autoplay: true,
    autoplaySpeed: 5000,
    pauseOnHover: false,
    cssEase: 'linear' // speed: 1000,

  }); // Swiper.js slide content

  var swiper = new Swiper('#sweeper-container', {
    spaceBetween: 30,
    speed: 800,
    slidesPerView: 3,
    centeredSlides: true,
    irection: 'vertical',
    mode: 'horizontal',
    loop: true,
    autoplay: {
      delay: 5000,
      disableOnInteraction: false
    },
    navigation: {
      nextEl: ".swiper-button-next",
      prevEl: ".swiper-button-prev"
    },
    on: {
      init: function init() {
        var _this = this;

        this.el.addEventListener('mouseenter', function () {
          _this.autoplay.stop();
        });
        this.el.addEventListener('mouseleave', function () {
          _this.autoplay.start();
        });
      }
    }
  }); // Default param

  var delay = 7000,
      totalNews = 3,
      startPos = 2,
      empNews = false,
      progress = false,
      arrPost = [],
      $items = null;
  var startCheckUser = setInterval(_async(function () {
    return _await(getMeta($.cookie('session-key')), function (res) {
      if (res.status == 200 && res.data.length !== 0) {
        var data = res.data[0];

        if (data.clearInterval) {
          stopCheckUser();
        } else {
          totalNews = data['count-news'];
          console.log("User name: " + data.name + ", TotalPos:" + totalNews); // startPos = data['count-news'] - total_news;
        }
      } else {
        console.log("%cget Data User: " + "error connect to server", "color: #1122cc");
        console.log("Log Out Account");
      }

      console.log("%cget Data User: " + res.status, "color: #1122cc");
    });
  }), delay);

  var stopCheckUser = function stopCheckUser() {
    return clearInterval(startCheckUser);
  };

  var // Конпка для возврата в верх страницы
  scroll_up = $('#scroll-up'),
      // Порог для появления кнопки
  introHeight = $('#header').innerHeight(),
      scrollOffset = $(window).scrollTop();

  var checkScroll = function checkScroll(scrollOffset) {
    if (scrollOffset >= introHeight) {
      scroll_up.css("display", "block");
    } else {
      scroll_up.css("display", "none");
    }
  };
  /* Fixed Header View */


  checkScroll(scrollOffset); // Событие при скролле

  $(window).on("scroll", function () {
    // Текущее положение на странице
    scrollOffset = $(this).scrollTop();
    checkScroll(scrollOffset);
  }); // Smooth scroll

  var blockId = "#header";
  $('[data-scroll]').on('click', function (e) {
    e.preventDefault();
    var $this = $(this),
        blockId = $this.data('scroll');
    var blockOffset = $(blockId).offset().top; // console.log(blockId)

    $('html, body').animate({
      scrollTop: blockOffset
    }, 500);
  });
  $("button.widget-close-btn").on("click", function (e) {
    e.preventDefault();
    $(this).parent().css("display", "none");
  });
  $(window).scroll(function () {
    var _this2 = this;

    var upadateScroll = setInterval(function () {
      // высота окна + высота прокрутки больше или равны высоте всего документа
      if ($(window).scrollTop() + $(window).height() >= $(document).height() - 200 && !progress) {
        console.log("Scrolled to end of content."); // $items = $("#custom-scrollbar #mCSB_1_container");

        $items = $("#custom-scrollbar");

        if (!progress && totalNews > startPos) {
          var $this = $items.find(".news-msg");

          if (empNews && $this.is(".warning")) {
            $this.last().animate({
              opacity: 0
            }, 500, function () {
              return $this.parent().remove();
            });
          }

          console.log('Ajax');
          $.ajax({
            url: "http://192.168.1.105:3002/news",
            type: "GET",
            // data: '_start=' + startPos + '&_limit=1',
            data: {
              _start: startPos,
              _limit: 1
            },
            // async: false,
            beforeSend: function beforeSend() {
              progress = true; // $("#custom-scrollbar").mCustomScrollbar("destroy"); //Destroy
              // $('#custom-scrollbar').html('<div class="loading">Loading ...</div>'); //clear html because it will show normal scroll bar
            },
            success: function success(data) {
              if (data !== undefined) {
                var _arrPost;

                (_arrPost = arrPost).push.apply(_arrPost, _toConsumableArray(data));

                progress = false;
              } else {
                // progress = undefined;
                console.log('progress: ');
              }
            },
            complete: function complete() {
              /*$(".YOUR-CONTENT-DIV").mCustomScrollbar({
                theme: "dark",
              });*/
              $.each(arrPost, function (i, news) {
                // console.log(news);  
                console.log($items);
                $items.append("\n                <div class=\"news-item op\">\n                  <div class=\"inner-wrapper\">\n\n                    <h2 class=\"title\"><a href=\"#\">" + news['title'] + "</a></h2>\n                    \n                    <div class=\"content-box\">\n                      " + (news['img-sm'] !== null ? "<div class=\"img\"><a href=\"#\"><img src=\"" + news['img-sm'] + "\" alt=\"\" title=\"" + news['title'] + "\"></a></div>" : "") + "\n                      <div class=\"desc-short desc-short-container\">" + news['desc-short'] + "</div>\n                      <a href=\"" + news['slug'] + "\" class=\"link btn\">\u041F\u043E\u0434\u0440\u043E\u0431\u043D\u0435\u0435...</a>\n                    </div>\n\n                    <div class=\"content-stats\">\n                      <span class=\"views-icon\"><i class=\"far fa-chart-bar\"></i></span>\n                      <span class=\"views-total\">" + (news['views-total'] == 0 ? 'Просмотров за все время нет' : news['views-total'] + ' просмотров всего,') + "</span>\n                      <span class=\"views-today\">" + (news['views-today'] == 0 ? 'сегодня нет просмотров' : news['views-today'] + ' просмотров сегодня') + "</span>\n                    </div>\n\n\n                    <div class=\"entry-meta\">\n                      <span class=\"by-author author\"><a class=\"\" href=\"http://teacher-math.ru/author/" + news['author-name'] + "\"><i class=\"fas fa-user-alt\"></i>" + news['author-name'] + "</a></span>\n\n                      <span class=\"date\">\n                        <a href=\"http://teacher-math.ru/2016/01/07/vladimir-putin-poruchil-pravitelstvu-rf-razrabotat-kompleks-mer-po-obnovleniyu-obshhego-obrazovaniya/\"\n                          title=\"14:10\" rel=\"bookmark\"><i class=\"far fa-calendar-alt\"></i>\n                          <time class=\"entry-date published\" datetime=\"2016-01-06T12:10:54+00:00\">06.01.2016</time>\n                          <time class=\"updated hidden\" datetime=\"2016-01-07T09:27:25+00:00\">" + news['published-at'] + "</time>\n                        </a>\n                      </span>\n                      <span class=\"category\"><a href=\"http://teacher-math.ru/category/novosti/\"\n                          rel=\"category tag\"><i class=\"far fa-folder-open\"></i>\u041D\u043E\u0432\u043E\u0441\u0442\u0438</a></span>\n\n                      <span class=\"comments\">\n                        <a href=\"http://teacher-math.ru/2016/01/07/vladimir-putin-poruchil-pravitelstvu-rf-razrabotat-kompleks-mer-po-obnovleniyu-obshhego-obrazovaniya/#respond\"><i class=\"far fa-comment-dots\">\n                        </i>" + (news['comment'] == 0 ? 'Комментариев нет' : news['comment'] + ' коментариев') + "</a></span>\n                      <!-- Meta -->\n                    </div>\n\n                    <!-- inner-wrapper -->\n                  </div>\n\n                  <!-- news item -->\n                </div>\n              ");
              }); //each news

              $items.find(".op").animate({
                opacity: 1
              }, 500);
              arrPost = [];
              startPos++;
              $(window).scroll();
              console.log("%c Complete : " + startPos, "color: #00FC09");
            },
            error: function error(jqXHR, exception) {
              var msg = '';

              if (jqXHR.status === 0) {
                msg = 'Not connect.\n Verify Network.';
              } else if (jqXHR.status == 404) {
                msg = 'Requested page not found. [404]';
              } else if (jqXHR.status == 500) {
                msg = 'Internal Server Error [500].';
              } else if (exception === 'parsererror') {
                msg = 'Requested JSON parse failed.';
              } else if (exception === 'timeout') {
                msg = 'Time out error.';
              } else if (exception === 'abort') {
                msg = 'Ajax request aborted.';
              } else {
                msg = 'Uncaught Error.\n' + jqXHR.responseText;
              }

              console.error(msg); // $('#post').html(msg);
            }
          }); // 
        } else {
          //if progress
          empNews = true;

          if ($items.find('.news-msg').is(".warning")) {
            $(_this2).val('Новостей пока что нет.');
            console.log('Новостей пока что нет.');
          } else {
            $items.append("\n            <div class=\"news-item\"><div class=\"news-msg warning\">\u041D\u043E\u0432\u043E\u0441\u0442\u0435\u0439 \u043F\u043E\u043A\u0430 \u0447\u0442\u043E \u043D\u0435\u0442.</div></div>\n            ");
          }
        } //onTotalScroll()


        console.log(progress); // $('#custom-scrollbar').mCustomScrollbar("update")
      }
    }, 3000);
  }); // Событие при скролле
  // $("#custom-scrollbar > #mCSB_1").on('mousewheel', function() {
  //   // Текущее положение на странице
  //   console.log("#scroll-news");
  //   let scrollTopCustom = $(this).find(".mCSB_dragger").position().top;
  //   console.log(scrollTopCustom);
  //   if ($("#mCSB_1_dragger_vertical").hasClass('mCSB_dragger_onDrag')) {
  //     alert('ok');
  //   }
  // });

  if (!setting.getBreadcrumb()) {
    app1.$destroy();
  } // JQ End

});
var response = fetch('http://192.168.1.105:3002/events_user?session-key=' + $.cookie('session-key', '65r2h6e26okx9o55t')); // , {
// method: 'GET',
// body: {}})
// let commits = response.json(); // читаем ответ в формате JSON

var loadSetting = function loadSetting(cookie) {
  var url = "http://192.168.1.105:3002/events_user?session-key=" + cookie;
  return axios.get(url).then(function (response) {
    return response;
  });
};

var defaultSetting = [];

var returnSetting = function returnSetting(data) {
  defaultSetting = data;
  return data;
}; // console.log(returnSetting);


loadSetting($.cookie('session-key')).then(function (response) {
  if (response.status == 200) {
    // returnSetting(response.data[0]);
    defaultSetting = response.data[0];
    return defaultSetting;
  } // JSON.parse

});

var getMeta = _async(function (cookie) {
  // 65r2h6e26okx9o55t
  var url = "http://192.168.1.105:3002/events_user?session-key=" + cookie;
  return axios.get(url);
});

Vue.component('breadcrumb-data', {
  props: ['breadcrumb', 'index', 'mark', 'len'],
  template: "\n    <span  v-html=\"addRoute(breadcrumb)\" property=\"itemListElement\" typeof=\"ListItem\">\n      <meta property=\"position\" content=\"breadcrumb.position\">\n    </span>\n    ",
  methods: {
    addMark: function addMark(index) {
      var marker = index < this.len - 1 ? this.mark : '';
      return marker;
    },
    addRoute: function addRoute(obj) {
      var response,
          meta = '<span property="name">' + obj.name + '</span>',
          tag = 'a'; //default tag

      if (obj.item !== undefined && obj.item !== "") {
        response = '<' + tag + ' property="item" typeof="WebPage" href="' + obj.item + '"' + (obj.target ? "target=_blank" : "") + '>' + meta + '</' + tag + '>';
      } else {
        tag = 'span';
        response = '<' + tag + ' property="item" typeof="WebPage">' + meta + '</' + tag + '>';
      }

      var responseWithMark = response + this.addMark(this.index);
      return responseWithMark;
    }
  }
}); // Vue Apps

var app1 = new Vue({
  el: '#v-breadcrumb',
  data: {
    // Setting component
    breadcrumb: true,
    // Status
    load: false,
    message: "Test",
    mark: " " + "→" + " ",
    // For init start render template
    breadcrumbList: [{
      "itemListElement": []
    }],
    urls: {
      news: 'http://192.168.1.105:3002/routes',
      cities: 'https://dka-develop.ru/api?type=city'
    },
    textsearche: ''
  },
  methods: {
    addMark: function addMark(index) {
      // console.log(index);
      var len = Object.keys(this.breadcrumbList[0].itemListElement).length,
          marker = index < --len ? this.mark : '';
      return marker;
    },
    addRoute: function addRoute(obj) {
      var response,
          meta = '<span property="name">' + obj.name + '</span>',
          tag = 'a'; //default tag

      if (obj.item !== undefined && obj.item !== "") {
        response = '<' + tag + ' property="item" typeof="WebPage" href="' + obj.item + '"' + (obj.target ? "target=_blank" : "") + '>' + meta + '</' + tag + '>';
      } else {
        tag = 'span';
        response = '<' + tag + ' property="item" typeof="WebPage">' + meta + '</' + tag + '>';
      }

      return response;
    },
    lenObj: function lenObj(obj) {
      if (obj[0].itemListElement !== undefined) {
        var len = Object.keys(obj[0].itemListElement).length;
        return len;
      } else {
        return false;
      }
    },
    getRoutes: _async(function () {
      var _this3 = this;

      //console.log(this.urls['hashtags']);//Bad natation

      /* axios.get(this.urls.hashtags).then((response) => { 
                //console.log(response.data);
                //this.hashtags.push(response.data);
                this.hashtags = response.data;
                        console.log(this);
              }); */
      // let contextRoutes = this; // or instance app3 = new Vue
      return axios.get(_this3.urls.news);
    })
  },
  mounted: _async(function () {
    var _this4 = this;

    var cookie = $.cookie('session-key');
    var url = "http://192.168.1.105:3002/events_user?session-key=" + cookie;
    return _await(axios.get(url).then(function (response) {
      _this4.breadcrumb = response.data[0].breadcrumb;
    }), function () {
      return _continueIgnored(_catch(function () {
        return _await(_this4.getRoutes(), function (resp) {
          if (resp.status == 200) {
            console.log('%cStatus: ' + resp.status + ', data successfully loaded', 'color: #43852f');
            _this4.load = true; // this.breadcrumbList.length = 0;
            // this.breadcrumbList.pop();

            _this4.breadcrumbList = [];

            _this4.breadcrumbList.push(resp.data);
          } else {
            console.log(resp.status);
          }
        });
      }, function (err) {
        console.error("Error loading json obj on url: " + _this4.urls.news + ' name: ' + err.name);
      }));
    });
  }),
  created: function created() {}
});